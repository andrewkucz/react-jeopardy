{"version":3,"sources":["helpers.js","components/GameBoard/GameTile/index.jsx","components/GameBoard/index.jsx","questions.js","components/Question/index.jsx","components/Controls/index.jsx","components/ScoreBoard/index.jsx","Game.js","Clicker.js","index.js"],"names":["groupByProp","prop","array","reduce","acc","val","groupBy","Array","isArray","concat","groupByValue","groupByCategory","getInitQuestions","csvText","questions","allText","commaPlaceHolder","allTextLines","split","map","line","replace","match","headers","lines","i","length","data","temp","j","value","trim","Number","isInteger","parseInt","reg","RegExp","push","processData","answered","groupedByCategory","Object","keys","cat","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","GameTile","isHeader","category","question","answer","rest","displayValue","className","questionsCsv","Blob","type","GameBoard","questionMap","setQuestion","categories","rowCount","cur","getRowCount","style","gridTemplateColumns","gridTemplateRows","colIndex","questionValues","Fragment","gridArea","questionValue","rowIndex","onClick","href","URL","createObjectURL","download","Question","goBack","markAnswered","users","clickerKeys","clickerQueue","setClickerQueue","showAnswer","setShowAnswer","addToQueue","useCallback","u","cq","includes","clearQueue","useEffect","onKeyDown","e","findIndex","addEventListener","removeEventListener","position","bottom","left","minHeight","filter","Controls","addUser","clearUsers","resetScores","setQuestions","setClickerKey","height","display","flexDirection","justifyContent","id","onChange","fileUpload","document","getElementById","test","toLowerCase","FileReader","reader","onload","target","result","readAsText","files","alert","accept","click","overflow","marginTop","padding","width","marginRight","promptChar","prompt","ScoreBoard","scores","initQuestionMap","initUsers","Content","selected","setSelected","q","Game","setQuestionMap","setUsers","setScores","setClickerKeys","sc","user","qm","newUser","cks","App","Index","basename","process","exact","path","Clicker","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.479a368d.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\n\r\nexport function processData(allText) {\r\n    const commaPlaceHolder = '{{{comma}}}'\r\n    var allTextLines = allText.split(/\\r\\n|\\n/).map(line => line.replace(/(\".+[,].+\")/g, match => match.replace(/,/g, commaPlaceHolder)));\r\n    var headers = allTextLines[0].split(',');\r\n    var lines = [];\r\n    for (var i=1; i<allTextLines.length; i++) {\r\n        \r\n        var data = allTextLines[i].split(',');\r\n        if (data.length === headers.length) {\r\n            var temp = {};\r\n            for (var j=0; j<headers.length; j++) {\r\n\r\n                let value = data[j].trim()\r\n\r\n                if(Number.isInteger(parseInt(value))) {\r\n                  value = parseInt(value)\r\n                } else if(value.replace) {\r\n                  const reg = new RegExp(`${commaPlaceHolder}`, 'g')\r\n                  value = value.replace(reg, ',')\r\n                }\r\n\r\n                temp[headers[j]] = value;\r\n            }\r\n            lines.push(temp);\r\n        }\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function groupByProp(prop) {\r\n  return array => array.reduce((acc, val) => {\r\n    const groupBy = val[prop]\r\n    if(acc[groupBy]) {\r\n      if(Array.isArray(acc[groupBy])) {\r\n        acc[groupBy] = acc[groupBy].concat(val)\r\n      } else {\r\n        acc[groupBy] = [acc[groupBy], val]\r\n      }\r\n\r\n    } else {\r\n      acc[groupBy] = val\r\n    }\r\n    return acc\r\n  }, {})\r\n}\r\n\r\nconst groupByValue = groupByProp('value')\r\nconst groupByCategory = groupByProp('category')\r\n\r\nexport function getInitQuestions(csvText) {\r\n  const questions = processData(csvText).map(val => ({...val, answered: false}))\r\n  const groupedByCategory = groupByCategory(questions)\r\n\r\n  return Object.keys(groupedByCategory).reduce((acc, cat) => {\r\n    acc[cat] = groupByValue(groupedByCategory[cat])\r\n    return acc\r\n  }, {})\r\n  \r\n}\r\n\r\n\r\nexport function getRowCount(questionMap) {\r\n  return Object.keys(questionMap).reduce((acc, key) => {\r\n    let cur = Object.keys(questionMap[key]).length || 0\r\n    if(cur > acc) {\r\n      acc = cur\r\n    }\r\n    return acc\r\n  }, 0) + 1\r\n  // add one for category row\r\n}\r\n\r\n// Hook\r\nexport function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GameTile = ({isHeader, question, answer, category, value, answered, ...rest}) => {\r\n\r\n  const displayValue = isHeader ? category : !answered ? <><span className=\"dollar\">$</span>{value}</> : ''\r\n  const className = isHeader ? 'category' : 'score'\r\n\r\n  return (\r\n    <div className={className + ' blue'} {...rest}>\r\n      {displayValue}\r\n    </div>\r\n  )\r\n}\r\n\r\nGameTile.propTypes = {\r\n\r\n}\r\n\r\nexport default GameTile","import React from 'react'\r\nimport './styles.css'\r\nimport GameTile from './GameTile'\r\nimport { getRowCount } from '../../helpers'\r\nimport sample_questions from '../../questions'\r\n\r\nconst colWidth = `1fr`\r\nconst rowHeight = `1fr`\r\n\r\nconst questionsCsv = new Blob([sample_questions], {type: 'text/plain'});\r\n\r\n\r\nconst GameBoard = ({questionMap, setQuestion}) => {\r\n  const categories = Object.keys(questionMap)\r\n  const rowCount = getRowCount(questionMap)\r\n\r\n  return (\r\n    <>\r\n    {\r\n      categories.length > 0 ? <div style={{gridTemplateColumns: `repeat(${categories.length},${colWidth})`, gridTemplateRows: `repeat(${rowCount}, ${rowHeight})`}} className=\"game-board\">\r\n      {categories.map((category, colIndex) => {\r\n        const questionValues = Object.keys(questionMap[category])\r\n        return <React.Fragment key={category}>\r\n          <GameTile category={category} isHeader style={{gridArea: `${1} / ${colIndex+1}`}} />\r\n          {questionValues.map((questionValue, rowIndex) => {\r\n          const question = questionMap[category][questionValue]\r\n          return <GameTile key={colIndex + '_' + rowIndex} style={{gridArea: `${rowIndex+1+1} / ${colIndex+1}`}} onClick={() => setQuestion(question)} {...question} />\r\n        })}\r\n        </React.Fragment>\r\n      })}\r\n    </div> : <div className=\"board empty\">\r\n      <div className=\"max-width\">Import questions from a CSV fie using the button on the left. CSV file must have the following column headers: <em>question</em>, <em>answer</em>, <em>category</em>, <em>value</em>\r\n      <p>\r\n        Download <a href={URL.createObjectURL(questionsCsv)} download=\"sample_questions.csv\">example csv file</a>\r\n      </p>\r\n      <p>\r\n        Be sure to set the clicker key for each player on the left by clicking the \"Set\" button for each player.\r\n      </p>\r\n      </div>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nGameBoard.propTypes = {\r\n\r\n}\r\n\r\nexport default GameBoard","const exampleCsv = `question,answer,category,value\r\nquestion1,answer1,category1,200\r\nquestion2,answer2,category1,400\r\nquestion3,answer3,category1,600\r\nquestion4,answer4,category1,800\r\nquestion5,answer5,category1,1000\r\nquestion6,answer6,category2,200\r\nquestion7,answer7,category2,400\r\nquestion8,answer8,category2,600\r\nquestion9,answer9,category2,800\r\nquestion10,answer10,category2,1000\r\nquestion11,answer11,category3,200\r\nquestion12,answer12,category3,400\r\nquestion13,answer13,category3,600\r\nquestion14,answer14,category3,800\r\nquestion15,answer15,category3,1000\r\nquestion16,answer16,category4,200\r\nquestion17,answer17,category4,400\r\nquestion18,answer18,category4,600\r\nquestion19,answer19,category4,800\r\nquestion20,answer20,category4,1000\r\nquestion21,answer21,category5,200\r\nquestion22,answer22,category5,400\r\nquestion23,answer23,category5,600\r\nquestion24,answer24,category5,800\r\nquestion25,answer25,category5,1000\r\nquestion26,answer21,category6,200\r\nquestion27,answer22,category6,400\r\nquestion28,answer23,category6,600\r\nquestion29,answer24,category6,800\r\nquestion30,answer25,category6,1000`\r\n\r\n\r\n\r\nexport default exampleCsv","import React, { useState, useEffect, useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Question = ({question, goBack, markAnswered, users, clickerKeys}) => {\r\n\r\n  const [clickerQueue, setClickerQueue] = useState([])\r\n  const [showAnswer, setShowAnswer] = useState(false)\r\n\r\n\r\n  const addToQueue = useCallback(\r\n    (u) => {\r\n      setClickerQueue(cq => {\r\n        if(cq.includes(u)) {\r\n          return cq\r\n        } else {\r\n          return [...cq, u]\r\n        }\r\n      })\r\n    },\r\n    [setClickerQueue],\r\n  )\r\n  const clearQueue = useCallback(\r\n    () => {\r\n      setClickerQueue([])\r\n    },\r\n    [setClickerQueue],\r\n  )\r\n\r\n  useEffect(() => {\r\n    function onKeyDown(e) {\r\n      const i = users.findIndex(u => clickerKeys[u] === e.key)\r\n      if (i !== -1) {\r\n        addToQueue(users[i])\r\n      }\r\n    }\r\n    window.addEventListener('keydown', onKeyDown);\r\n    return () => window.removeEventListener('keydown', onKeyDown);\r\n  }, [users, clickerKeys])\r\n\r\n  return (\r\n    <div className=\"question blue\">\r\n      <button className=\"go-back\" onClick={() => {\r\n        goBack()\r\n        clearQueue()\r\n      }}>Back to Board</button>\r\n      <div className=\"clicker-queue\">\r\n        <strong>Buzzer Order</strong>\r\n          {clickerQueue.map((u, i) => {\r\n            return <div key={u}>{i+1}. {u}</div>\r\n          })}\r\n      </div>\r\n      <div style={{position: 'absolute', bottom: '1rem', left: '1rem'}}>\r\n        <button onClick={() => markAnswered(question)}>No one got it</button>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"score\">${question.value}</div>\r\n        <div>{question.category}</div>\r\n      </div>\r\n      <div className=\"text\">\r\n        {showAnswer ? question.answer : question.question}\r\n      </div>\r\n      <div style={{minHeight: 35}}>\r\n      {!showAnswer && clickerQueue.length > 0 && <button onClick={() => setShowAnswer(true)}>Show Answer</button>}\r\n      </div>\r\n      {clickerQueue.length > 0 && <><p>\r\n        Award question to:\r\n      </p>\r\n      <div>\r\n        {users.filter(u => clickerQueue.includes(u)).map(u => <button className=\"player-button\" key={u} onClick={() => {\r\n          markAnswered(question, u)\r\n          clearQueue()\r\n        }}>{u}</button>)}\r\n      </div>      \r\n      </>}\r\n    </div>\r\n  )\r\n}\r\n\r\nQuestion.propTypes = {\r\n\r\n}\r\n\r\nexport default Question","import React from 'react'\r\n\r\nconst Controls = ({ addUser, clearUsers, resetScores, setQuestions, users, clickerKeys, setClickerKey }) => {\r\n\r\n  const processCsv = () => {\r\n    var fileUpload = document.getElementById(\"fileUpload\");\r\n    fileUpload.click()\r\n}\r\n\r\nconst onFileChange = e => {\r\n  var fileUpload = document.getElementById(\"fileUpload\");\r\n  var regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.csv|.txt)$/;\r\n    if (regex.test(fileUpload.value.toLowerCase())) {\r\n        if (typeof (FileReader) != \"undefined\") {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                setQuestions(e.target.result)\r\n            }\r\n            reader.readAsText(fileUpload.files[0]);\r\n        } else {\r\n            alert(\"This browser does not support HTML5.\");\r\n        }\r\n    } else {\r\n        alert(\"Please upload a valid CSV file.\");\r\n    }\r\n}\r\n\r\n\r\n  return (\r\n    <div style={{height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between'}}>\r\n      <div>\r\n        <h2>Controls</h2>\r\n        <div>\r\n          <div style={{display: 'none'}}>\r\n            <input type=\"file\" id=\"fileUpload\" onChange={onFileChange} accept=\".csv\"/>\r\n          </div>\r\n          <button onClick={processCsv}>Import Questions CSV</button>\r\n          <button onClick={() => setQuestions('')}>Clear Questions</button>\r\n        </div>\r\n      </div>\r\n      {users && users.length > 0 && <div style={{overflow: 'auto'}}>\r\n        Clicker Keys:\r\n        <div>\r\n          {users.map(u => {\r\n\r\n            const display = clickerKeys[u] === ' ' ? 'Spc' : (clickerKeys[u] || `Set`)\r\n\r\n            return <div key={u} style={{marginTop: 10}}>\r\n              <button style={{display: 'inline-block', padding: '6px 0px', width: '2rem', marginRight: '0.5rem'}} onClick={() => {\r\n                let promptChar = window.prompt(`Enter a single key to set as the clicker for ${u}`)\r\n                if(promptChar && promptChar.length > 1) {\r\n                  alert('Please enter a valid single character for the clicker')\r\n                } else {\r\n                  setClickerKey(u, promptChar)\r\n                }\r\n                }}>{display}</button>{u}\r\n            </div>\r\n          })}\r\n        </div>\r\n      </div>}\r\n      \r\n      <div>\r\n          {clearUsers && <button onClick={clearUsers}>Clear Players</button>}\r\n          {resetScores && <button onClick={resetScores}>Reset Scores</button>}\r\n          {addUser && <button onClick={addUser}>Add Player</button>}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Controls","import React from 'react'\r\n\r\nconst ScoreBoard = ({users, scores}) => {\r\n\r\n  if(!users || !users.length) {\r\n    return (<div className=\"scores empty\">\r\n    <div className=\"max-width\">\r\n      There are currently no players added\r\n    </div>\r\n  </div>)\r\n  }\r\n\r\n  return (<div style={{gridTemplateColumns: `repeat(${users.length}, 1fr)`, gridTemplateRows: `min-content`}} className=\"game-scores\">\r\n    {users.map(u => {\r\n      return <div key={u} className=\"blue container\">\r\n        <div className=\"name\">{u}</div>\r\n        <div className=\"score center\"><span className=\"dollar\">$</span>{scores[u]}</div>\r\n      </div>\r\n    })}\r\n  </div>)\r\n}\r\n\r\nexport default ScoreBoard","import { useCallback, useState, useEffect } from 'react'\nimport { getInitQuestions, useLocalStorage } from './helpers'\nimport { GameBoard, Question, Controls, ScoreBoard } from './components'\n\nimport qs from './questions'\n\n//const initQuestionMap = getInitQuestions(qs)\n//const initUsers = ['Anne', 'Andrew']\nconst initQuestionMap = {}\nconst initUsers = []\n\nfunction Content({questionMap, markAnswered, users, scores, clickerKeys}) {\n\n  const [selected, setSelected] = useState(null)\n\n  const goBack = useCallback(() => {\n    setSelected(null)\n  }, [setSelected])\n\n  if(selected) {\n    return <Question question={selected} markAnswered={(q, u) => {\n      markAnswered(q, u)\n      setSelected(null)\n    }} goBack={goBack} users={users} clickerKeys={clickerKeys}/>\n  }\n  \n  return (<GameBoard questionMap={questionMap} setQuestion={setSelected} scores={scores} />);\n}\n\nfunction Game() {\n\n  const [questionMap, setQuestionMap] = useLocalStorage('questionMap', initQuestionMap)\n  const [users, setUsers] = useLocalStorage('users', initUsers)\n  const [scores, setScores] = useLocalStorage('userScores', {})\n\n  const [clickerKeys, setClickerKeys] = useLocalStorage('userClickerKeys', {})\n\n  useEffect(() => {\n    setScores(sc => {\n      return users.reduce((acc, user) => {\n        acc[user] = sc[user] || 0\n        return acc\n      }, {})\n    })\n    setClickerKeys(sc => {\n      return users.reduce((acc, user) => {\n        acc[user] = sc[user] || ''\n        return acc\n      }, {})\n    })\n  }, [users])\n\n  const markAnswered = useCallback((question, user) => {\n    setQuestionMap(qm => ({\n      ...qm,\n      [question.category]: {\n        ...qm[question.category],\n        [question.value]: {\n          ...question.value,\n          answered: true\n        }\n      }\n    }))\n    if(user) {\n      setScores(sc => ({\n        ...sc,\n        [user]: sc[user] + question.value\n      }))\n    }\n  }, [setQuestionMap, setScores])\n\n  const addUser = useCallback(() => {\n    let newUser = window.prompt(`Enter player ${users.length+1} name:`)\n    if(newUser) {\n      setUsers(u => u.concat(newUser))\n    }\n  }, [setUsers, users])\n\n  const clearUsers = useCallback(() => {\n    setUsers([])\n  }, [setUsers])\n\n  const resetScores = useCallback(() => {\n    setScores(users.reduce((acc, u) => {\n      acc[u] = 0;\n      return acc\n    }, {}))\n  }, [users, setScores])\n\n  const setQuestions = useCallback((csvText) => {\n    setQuestionMap(getInitQuestions(csvText))\n  }, [setQuestionMap])\n\n  const setClickerKey = useCallback((u, key) => {\n    if(!u) {\n      return\n    }\n    setClickerKeys(cks => ({\n      ...cks,\n      [u]: key || ''\n    }))\n  }, [setClickerKeys])\n\n\n\n  return <>\n  <div className=\"controls\">\n    <Controls setClickerKey={setClickerKey} users={users} addUser={addUser} clearUsers={users.length > 0 && clearUsers} resetScores={users.length > 0 && resetScores} setQuestions={setQuestions} clickerKeys={clickerKeys} />\n  </div>\n  <div className=\"game\">\n    <Content questionMap={questionMap} users={users} scores={scores} markAnswered={markAnswered} clickerKeys={clickerKeys} />\n    <ScoreBoard users={users} scores={scores} />\n  </div>\n  </>\n}\n\nexport default Game;\n","function App() {\n  return (\n    <div className=\"App\">\n      clicker\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport Clicker from './Clicker'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst Index = () => {\n  return <Router basename={process.env.PUBLIC_URL}>\n  <Switch>\n    <Route exact path=\"/\">\n      <Game />\n    </Route>\n    <Route path=\"/clicker\">\n      <Clicker />\n    </Route>\n  </Switch>\n</Router>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}